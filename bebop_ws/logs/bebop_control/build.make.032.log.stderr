In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:40:0[m[K,
                 from [01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:1[m[K:
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:[m[K In function â€˜[01m[Kvoid homeGps(nav_msgs::Odometry&)[m[Kâ€™:
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:67:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::Odometry {aka nav_msgs::Odometry_<std::allocator<void> >}[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K                                                                   ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:346:165:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
[01;32m[K                                                                                                                                                                     ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:379:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
[01;32m[K       ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:561:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
[01;32m[K                                   ^[m[K
[01m[K/opt/ros/kinetic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
[01;32m[K                       ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:2:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K  ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:98:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::Odometry {aka nav_msgs::Odometry_<std::allocator<void> >}[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K                                                                                                  ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:346:165:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
[01;32m[K                                                                                                                                                                     ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:379:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
[01;32m[K       ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:561:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
[01;32m[K                                   ^[m[K
[01m[K/opt/ros/kinetic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
[01;32m[K                       ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:2:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K  ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:129:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::Odometry {aka nav_msgs::Odometry_<std::allocator<void> >}[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K                                                                                                                                 ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:346:165:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
[01;32m[K                                                                                                                                                                     ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:379:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
[01;32m[K       ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:561:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
[01;32m[K                                   ^[m[K
[01m[K/opt/ros/kinetic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
[01;32m[K                       ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:2:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K  ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:160:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::Odometry {aka nav_msgs::Odometry_<std::allocator<void> >}[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K                                                                                                                                                                ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:346:165:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, __VA_ARGS__)
[01;32m[K                                                                                                                                                                     ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:379:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
       ROSCONSOLE_PRINT_AT_LOCATION(__VA_ARGS__); \
[01;32m[K       ^[m[K
[01m[K/opt/ros/kinetic/include/ros/console.h:561:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
 #define ROS_LOG(level, name, ...) ROS_LOG_COND(true, level, name, __VA_ARGS__)
[01;32m[K                                   ^[m[K
[01m[K/opt/ros/kinetic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
 #define ROS_INFO(...) ROS_LOG(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
[01;32m[K                       ^[m[K
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:17:2:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
  ROS_INFO("<orientation> x : %lf, y : %lf, z : %lf, w : %lf", home->pose.pose.orientation.x, home->pose.pose.orientation.y, home->pose.pose.orientation.z, home->pose.pose.orientation.w);
[01;32m[K  ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/subscription_callback_helper.h:35:0[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/subscriber.h:33[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/node_handle.h:33[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/ros.h:45[m[K,
                 from [01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:1[m[K:
/opt/ros/kinetic/include/ros/parameter_adapter.h: In instantiation of â€˜[01m[Kstatic ros::ParameterAdapter<M>::Parameter ros::ParameterAdapter<M>::getParameter(const Event&) [with M = nav_msgs::Odometry_<std::allocator<void> >&; ros::ParameterAdapter<M>::Parameter = nav_msgs::Odometry_<std::allocator<void> >&; ros::ParameterAdapter<M>::Event = ros::MessageEvent<const nav_msgs::Odometry_<std::allocator<void> > >; typename boost::remove_reference<typename boost::remove_const<M>::type>::type = nav_msgs::Odometry_<std::allocator<void> >][m[Kâ€™:
[01m[K/opt/ros/kinetic/include/ros/subscription_callback_helper.h:144:48:[m[K   required from â€˜[01m[Kvoid ros::SubscriptionCallbackHelperT<P, Enabled>::call(ros::SubscriptionCallbackHelperCallParams&) [with P = nav_msgs::Odometry_<std::allocator<void> >&; Enabled = void][m[Kâ€™
[01m[K/home/nim/bebop_ws/src/bebop_autonomy/bebop_control/src/bebop_control.cpp:47:1:[m[K   required from here
[01m[K/opt/ros/kinetic/include/ros/parameter_adapter.h:78:30:[m[K [01;31m[Kerror: [m[Kbinding â€˜[01m[Kconst nav_msgs::Odometry_<std::allocator<void> >[m[Kâ€™ to reference of type â€˜[01m[Kros::ParameterAdapter<nav_msgs::Odometry_<std::allocator<void> >&>::Parameter {aka nav_msgs::Odometry_<std::allocator<void> >&}[m[Kâ€™ discards qualifiers
     return *event.getMessage();
[01;32m[K                              ^[m[K
make[2]: *** [CMakeFiles/bebop_control_test.dir/src/bebop_control.cpp.o] Error 1
make[1]: *** [CMakeFiles/bebop_control_test.dir/all] Error 2
make: *** [all] Error 2
